const { rooms, buildings } = require("../modules/rooms");
const fs = require("fs");
const path = require("path");

/**
 * Build the views for the Home Tab, since there no need to spend computation
 * time on the home views which will never need to change.
 */

const generateFloorTextForBuildingCode = (rooms, buildingCode) => {
  const floor6 = ["*6th Floor*\n"];
  const floor5 = ["*5th Floor*\n"];
  const floor4 = ["*4th Floor*\n"];
  const floor3 = ["*3rd Floor*\n"];
  const floor2 = ["*2nd Floor*\n"];
  const floor1 = ["*1st Floor*\n"];
  const floorZ = ["*Floor Z*\n"];
  const floor0 = ["*Floor 0*\n"];
  const floorn1 = ["*Floor -1*\n"];

  rooms.forEach(room => {
    if (room.code === buildingCode) {
      const floor = room.floor;
      let name = room.name;

      if (room.robinLink) {
        name = `<${room.robinLink}|${room.name}>`;
      }

      if (floor === "Floor 6") {
        floor6.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor 5") {
        floor5.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor 4") {
        floor4.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor 3") {
        floor3.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor 2") {
        floor2.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor 1") {
        floor1.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor Z") {
        floorZ.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor 0") {
        floor0.push(`:white_small_square: ${name}`);
      } else if (floor === "Floor -1") {
        floorn1.push(`:white_small_square: ${name}`);
      }
    }
  });

  let s = "";

  if (floor6.length > 1) {
    s += floor6.join("\n");
    s += "\n\n";
  }

  if (floor5.length > 1) {
    s += floor5.join("\n");
    s += "\n\n";
  }

  if (floor4.length > 1) {
    s += floor4.join("\n");
    s += "\n\n";
  }

  if (floor3.length > 1) {
    s += floor3.join("\n");
    s += "\n\n";
  }

  if (floor2.length > 1) {
    s += floor2.join("\n");
    s += "\n\n";
  }

  if (floor1.length > 1) {
    s += floor1.join("\n");
    s += "\n\n";
  }

  if (floor0.length > 1) {
    s += floor0.join("\n");
    s += "\n\n";
  }

  if (floorZ.length > 1) {
    s += floorZ.join("\n");
    s += "\n\n";
  }

  if (floorn1.length > 1) {
    s += floor1.join("\n");
    s += "\n\n";
  }

  return s;
};

const floors = {};

/**
 * Iterate through all of the buildings, and generate the floor
 * maps for each one.
 */
Object.keys(buildings).forEach(buildingKey => {
    const building = buildings[buildingKey];
    console.log(`Generating floor plan for ${buildingKey}`);
    floors[buildingKey] = generateFloorTextForBuildingCode(rooms, building.code);
});

const header = `
/**
 * THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT THIS FILE DIRECTLY.
 * If you need to make changes to any of these templates, then make the 
 * changes in the build/build-floors.js file.
 */
`;

const file = `${header}\nmodule.exports = ${JSON.stringify(floors, null, 2)}`;
const filename = 'generated-floor-maps.js';
const filePath = path.join(__dirname, filename);
fs.writeFileSync(filePath, file, { encoding: 'utf8', flag: 'w' });

console.log(`âœ… ${filename} written to ${filePath}`);


